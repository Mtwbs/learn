{"version":3,"file":"jq.js","sources":["../src/select.js","../src/dom.js","../src/index.js"],"sourcesContent":["/**\n *\n * @param {String} selector\n * @return {{string}} test strnig\n */\nexport function select(selector) {\n    if (typeof selector !== 'string') {\n        throw new Error(`typeError：${selector} is not a string.`);\n    }\n    // define a RegEx to distinguish a string.\n    let regex = /^(#|.)\\w+/g;\n    let result = regex.exec(selector);\n    let selectorSlice = selector.slice(1, selector.length);\n    console.log(selectorSlice);\n    switch (result[1]) {\n        case '#':\n            return document.getElementById(selectorSlice);\n            break;\n        case '.':\n            return document.getElementsByClassName(selectorSlice);\n            break;\n        default:\n            return document.getElementsByTagName(selector);\n            break;\n    }\n}\n","import {select} from './select';\n\n/**\n * dom 获取类\n * support:\n * - Class Slector(\".class\")\n * - Element Slector(\"element\")\n * - ID Slector(\"#ID\")\n */\nexport class Dom {\n    /**\n     *\n     * @param {String} selector\n     */\n    constructor(selector) {\n        this.selector = selector;\n    }\n\n    /**\n     * get document element dom\n     * @return {Object} {return this}\n     */\n    getNode() {\n        // checkout whether parameter is a string.\n        if (typeof this.selector !== 'string') {\n            throw new Error( `typeError：${this.selector} is not a string.` );\n        }\n        let ele = select(this.selector);\n        console.log(ele);\n        console.log(ele instanceof Object);\n        // if ele is not valid ,return empty object.\n        if (ele.length === 0) {\n            throw new Error(`unexpect param:${this.selector} is not valid.`);\n        }\n        for (let i = 0; i < ele.length; i ++) {\n            this[i] = ele[i];\n        }\n        this.length = ele.length;\n        return this;\n    }\n\n    /**\n     * @return {String} {return textContent}\n     */\n    text() {\n        return this[0].textContent;\n    }\n}\n","import {Dom} from './dom';\n\n/**\n * @param {String} selector\n * @return {Object} return object\n */\nfunction jQSlim(selector) {\n    return new Dom(selector).getNode();\n}\n\nwindow.JQ = jQSlim;\n"],"names":["select","selector","Error","regex","result","exec","selectorSlice","slice","length","log","document","getElementById","getElementsByClassName","getElementsByTagName","Dom","ele","Object","i","textContent","jQSlim","getNode","window","JQ"],"mappings":";;;AAAA;;;;;AAKA,AAAO,SAASA,MAAT,CAAgBC,QAAhB,EAA0B;QACzB,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;cACxB,IAAIC,KAAJ,qBAAuBD,QAAvB,uBAAN;;;QAGAE,QAAQ,YAAZ;QACIC,SAASD,MAAME,IAAN,CAAWJ,QAAX,CAAb;QACIK,gBAAgBL,SAASM,KAAT,CAAe,CAAf,EAAkBN,SAASO,MAA3B,CAApB;YACQC,GAAR,CAAYH,aAAZ;YACQF,OAAO,CAAP,CAAR;aACS,GAAL;mBACWM,SAASC,cAAT,CAAwBL,aAAxB,CAAP;;aAEC,GAAL;mBACWI,SAASE,sBAAT,CAAgCN,aAAhC,CAAP;;;mBAGOI,SAASG,oBAAT,CAA8BZ,QAA9B,CAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBZ;;;;;;;AAOA,IAAaa,GAAb;;;;;iBAKgBb,QAAZ,EAAsB;;;aACbA,QAAL,GAAgBA,QAAhB;;;;;;;;;;;kCAOM;;gBAEF,OAAO,KAAKA,QAAZ,KAAyB,QAA7B,EAAuC;sBAC7B,IAAIC,KAAJ,qBAAwB,KAAKD,QAA7B,uBAAN;;gBAEAc,MAAMf,OAAO,KAAKC,QAAZ,CAAV;oBACQQ,GAAR,CAAYM,GAAZ;oBACQN,GAAR,CAAYM,eAAeC,MAA3B;;gBAEID,IAAIP,MAAJ,KAAe,CAAnB,EAAsB;sBACZ,IAAIN,KAAJ,qBAA4B,KAAKD,QAAjC,oBAAN;;iBAEC,IAAIgB,IAAI,CAAb,EAAgBA,IAAIF,IAAIP,MAAxB,EAAgCS,GAAhC,EAAsC;qBAC7BA,CAAL,IAAUF,IAAIE,CAAJ,CAAV;;iBAECT,MAAL,GAAcO,IAAIP,MAAlB;mBACO,IAAP;;;;;;;;;+BAMG;mBACI,KAAK,CAAL,EAAQU,WAAf;;;;;;AC3CR;;;;AAIA,SAASC,MAAT,CAAgBlB,QAAhB,EAA0B;SACf,IAAIa,GAAJ,CAAQb,QAAR,EAAkBmB,OAAlB,EAAP;;;AAGJC,OAAOC,EAAP,GAAYH,MAAZ;;;;"}