{"version":3,"sources":["src/frappe-gantt.js"],"names":["Gantt","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","month_names","date_utils","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","parseInt","val","vals","length","concat","to_string","with_time","TypeError","get_date_values","i","padStart","date_string","time_string","format","format_string","values","d","format_map","YYYY","MM","DD","HH","mm","ss","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","includes","key","replace","push","value","diff","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","slice","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","max_score","clone","get_days_in_month","no_of_days","month","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","parent","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","name","ease","linear","on","element","selector","callback","bind","delegate","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","matches","parentNode","getAttribute","Bar","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","_end","_start","step","width","column_width","progress_width","progress","group","class","custom_class","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","draw_bar","draw_progress_bar","draw_label","draw_resize_handles","$bar","rx","ry","classList","$bar_progress","requestAnimationFrame","update_label_position","bar","handle_width","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","type","trigger_event","unselect_all","toggle","show_popup","bar_being_dragged","start_date","end_date","subtitle","target_element","title","xs","dependencies","get_bar","dep","valid_x","reduce","prev","curr","update_attr","update_handle_position","update_progressbar_position","update_arrow_position","changed","compute_start_end_date","new_start_date","new_end_date","Number","new_progress","compute_progress","setTimeout","x_in_units","gantt_start","width_in_units","task_start","view_is","header_height","padding","_index","dx","odx","rem","position","isNaN","label","getBBox","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","left","Popup","make","hide","pointer","Error","style","clientWidth","position_meta","HTMLElement","getBoundingClientRect","top","clientHeight","transform","opacity","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","$container","createElement","$svg","popup_wrapper","parentElement","default_options","view_modes","view_mode","date_format","custom_popup_html","assign","start","end","task_end_values","every","deps","trim","filter","generate_id","setup_dependencies","dependency_map","t","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","grid","rows_layer","lines_layer","row_width","row_height","row_y","x1","y1","x2","y2","header_width","tick_x","tick_y","tick_height","tick_class","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Day_lower","Week_lower","Month_lower","Day_upper","Week_upper","Month_upper","base_pos","x_pos","bars","dependency","get_task","task_id","Boolean","cur_width","actual_width","parent_element","hours_before_first_task","get_oldest_starting_date","scroll_pos","scrollLeft","hide_popup","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","action_in_progress","bar_wrapper","contains","offsetX","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","dy","get_snap_position","update_bar_position","date_changed","set_action_completed","bind_bar_progress","is_resizing","$bar_wrapper","min_dx","max_dx","$handle","progress_changed","out","to_process","acc","querySelectorAll","el","modes","Array","isArray","some","find","popup","show","args","apply","prev_date","random","toString"],"mappings":"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","file":"frappe-gantt.15299988.map","sourceRoot":"..","sourcesContent":["var Gantt = (function () {\n'use strict';\n\nconst YEAR = 'year';\nconst MONTH = 'month';\nconst DAY = 'day';\nconst HOUR = 'hour';\nconst MINUTE = 'minute';\nconst SECOND = 'second';\nconst MILLISECOND = 'millisecond';\n\nconst month_names = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n];\n\nvar date_utils = {\n    parse(date, date_separator = '-', time_separator = ':') {\n        if (date instanceof Date) {\n            return date;\n        }\n        if (typeof date === 'string') {\n            let date_parts, time_parts;\n            const parts = date.split(' ');\n\n            date_parts = parts[0]\n                .split(date_separator)\n                .map(val => parseInt(val, 10));\n            time_parts = parts[1] && parts[1].split(time_separator);\n\n            // month is 0 indexed\n            date_parts[1] = date_parts[1] - 1;\n\n            let vals = date_parts;\n\n            if (time_parts && time_parts.length) {\n                vals = vals.concat(time_parts);\n            }\n\n            return new Date(...vals);\n        }\n    },\n\n    to_string(date, with_time = false) {\n        if (!(date instanceof Date)) {\n            throw new TypeError('Invalid argument type');\n        }\n        const vals = this.get_date_values(date).map((val, i) => {\n            if (i === 1) {\n                // add 1 for month\n                val = val + 1;\n            }\n\n            return padStart(val + '', 2, '0');\n        });\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}`;\n\n        return date_string + (with_time ? ' ' + time_string : '');\n    },\n\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss') {\n        const values = this.get_date_values(date).map(d => padStart(d, 2, 0));\n        const format_map = {\n            YYYY: values[0],\n            MM: padStart(+values[1] + 1, 2, 0),\n            DD: values[2],\n            HH: values[3],\n            mm: values[4],\n            ss: values[5],\n            D: values[2],\n            MMMM: month_names[+values[1]],\n            MMM: month_names[+values[1]]\n        };\n\n        let str = format_string;\n        const formatted_values = [];\n\n        Object.keys(format_map)\n            .sort((a, b) => b.length - a.length) // big string first\n            .forEach(key => {\n                if (str.includes(key)) {\n                    str = str.replace(key, `$${formatted_values.length}`);\n                    formatted_values.push(format_map[key]);\n                }\n            });\n\n        formatted_values.forEach((value, i) => {\n            str = str.replace(`$${i}`, value);\n        });\n\n        return str;\n    },\n\n    diff(date_a, date_b, scale = DAY) {\n        let milliseconds, seconds, hours, minutes, days, months, years;\n\n        milliseconds = date_a - date_b;\n        seconds = milliseconds / 1000;\n        minutes = seconds / 60;\n        hours = minutes / 60;\n        days = hours / 24;\n        months = days / 30;\n        years = months / 12;\n\n        if (!scale.endsWith('s')) {\n            scale += 's';\n        }\n\n        return Math.floor(\n            {\n                milliseconds,\n                seconds,\n                minutes,\n                hours,\n                days,\n                months,\n                years\n            }[scale]\n        );\n    },\n\n    today() {\n        const vals = this.get_date_values(new Date()).slice(0, 3);\n        return new Date(...vals);\n    },\n\n    now() {\n        return new Date();\n    },\n\n    add(date, qty, scale) {\n        qty = parseInt(qty, 10);\n        const vals = [\n            date.getFullYear() + (scale === YEAR ? qty : 0),\n            date.getMonth() + (scale === MONTH ? qty : 0),\n            date.getDate() + (scale === DAY ? qty : 0),\n            date.getHours() + (scale === HOUR ? qty : 0),\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\n            date.getSeconds() + (scale === SECOND ? qty : 0),\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0)\n        ];\n        return new Date(...vals);\n    },\n\n    start_of(date, scale) {\n        const scores = {\n            [YEAR]: 6,\n            [MONTH]: 5,\n            [DAY]: 4,\n            [HOUR]: 3,\n            [MINUTE]: 2,\n            [SECOND]: 1,\n            [MILLISECOND]: 0\n        };\n\n        function should_reset(_scale) {\n            const max_score = scores[scale];\n            return scores[_scale] <= max_score;\n        }\n\n        const vals = [\n            date.getFullYear(),\n            should_reset(YEAR) ? 0 : date.getMonth(),\n            should_reset(MONTH) ? 1 : date.getDate(),\n            should_reset(DAY) ? 0 : date.getHours(),\n            should_reset(HOUR) ? 0 : date.getMinutes(),\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\n            should_reset(SECOND) ? 0 : date.getMilliseconds()\n        ];\n\n        return new Date(...vals);\n    },\n\n    clone(date) {\n        return new Date(...this.get_date_values(date));\n    },\n\n    get_date_values(date) {\n        return [\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes(),\n            date.getSeconds(),\n            date.getMilliseconds()\n        ];\n    },\n\n    get_days_in_month(date) {\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n        const month = date.getMonth();\n\n        if (month !== 1) {\n            return no_of_days[month];\n        }\n\n        // Feb\n        const year = date.getFullYear();\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\n            return 29;\n        }\n        return 28;\n    }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n    str = str + '';\n    targetLength = targetLength >> 0;\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\n    if (str.length > targetLength) {\n        return String(str);\n    } else {\n        targetLength = targetLength - str.length;\n        if (targetLength > padString.length) {\n            padString += padString.repeat(targetLength / padString.length);\n        }\n        return padString.slice(0, targetLength) + String(str);\n    }\n}\n\nfunction $(expr, con) {\n    return typeof expr === 'string'\n        ? (con || document).querySelector(expr)\n        : expr || null;\n}\n\nfunction createSVG(tag, attrs) {\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\n    for (let attr in attrs) {\n        if (attr === 'append_to') {\n            const parent = attrs.append_to;\n            parent.appendChild(elem);\n        } else if (attr === 'innerHTML') {\n            elem.innerHTML = attrs.innerHTML;\n        } else {\n            elem.setAttribute(attr, attrs[attr]);\n        }\n    }\n    return elem;\n}\n\nfunction animateSVG(svgElement, attr, from, to) {\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n    if (animatedSvgElement === svgElement) {\n        // triggered 2nd time programmatically\n        // trigger artificial click event\n        const event = document.createEvent('HTMLEvents');\n        event.initEvent('click', true, true);\n        event.eventName = 'click';\n        animatedSvgElement.dispatchEvent(event);\n    }\n}\n\nfunction getAnimationElement(\n    svgElement,\n    attr,\n    from,\n    to,\n    dur = '0.4s',\n    begin = '0.1s'\n) {\n    const animEl = svgElement.querySelector('animate');\n    if (animEl) {\n        $.attr(animEl, {\n            attributeName: attr,\n            from,\n            to,\n            dur,\n            begin: 'click + ' + begin // artificial click\n        });\n        return svgElement;\n    }\n\n    const animateElement = createSVG('animate', {\n        attributeName: attr,\n        from,\n        to,\n        dur,\n        begin,\n        calcMode: 'spline',\n        values: from + ';' + to,\n        keyTimes: '0; 1',\n        keySplines: cubic_bezier('ease-out')\n    });\n    svgElement.appendChild(animateElement);\n\n    return svgElement;\n}\n\nfunction cubic_bezier(name) {\n    return {\n        ease: '.25 .1 .25 1',\n        linear: '0 0 1 1',\n        'ease-in': '.42 0 1 1',\n        'ease-out': '0 0 .58 1',\n        'ease-in-out': '.42 0 .58 1'\n    }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n    if (!callback) {\n        callback = selector;\n        $.bind(element, event, callback);\n    } else {\n        $.delegate(element, event, selector, callback);\n    }\n};\n\n$.off = (element, event, handler) => {\n    element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n    event.split(/\\s+/).forEach(function(event) {\n        element.addEventListener(event, callback);\n    });\n};\n\n$.delegate = (element, event, selector, callback) => {\n    element.addEventListener(event, function(e) {\n        const delegatedTarget = e.target.closest(selector);\n        if (delegatedTarget) {\n            e.delegatedTarget = delegatedTarget;\n            callback.call(this, e, delegatedTarget);\n        }\n    });\n};\n\n$.closest = (selector, element) => {\n    if (!element) return null;\n\n    if (element.matches(selector)) {\n        return element;\n    }\n\n    return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n    if (!value && typeof attr === 'string') {\n        return element.getAttribute(attr);\n    }\n\n    if (typeof attr === 'object') {\n        for (let key in attr) {\n            $.attr(element, key, attr[key]);\n        }\n        return;\n    }\n\n    element.setAttribute(attr, value);\n};\n\nclass Bar {\n    constructor(gantt, task) {\n        this.set_defaults(gantt, task);\n        this.prepare();\n        this.draw();\n        this.bind();\n    }\n\n    set_defaults(gantt, task) {\n        this.action_completed = false;\n        this.gantt = gantt;\n        this.task = task;\n    }\n\n    prepare() {\n        this.prepare_values();\n        this.prepare_helpers();\n    }\n\n    prepare_values() {\n        this.invalid = this.task.invalid;\n        this.height = this.gantt.options.bar_height;\n        this.x = this.compute_x();\n        this.y = this.compute_y();\n        this.corner_radius = this.gantt.options.bar_corner_radius;\n        this.duration =\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\n            this.gantt.options.step;\n        this.width = this.gantt.options.column_width * this.duration;\n        this.progress_width =\n            this.gantt.options.column_width *\n                this.duration *\n                (this.task.progress / 100) || 0;\n        this.group = createSVG('g', {\n            class: 'bar-wrapper ' + (this.task.custom_class || ''),\n            'data-id': this.task.id\n        });\n        this.bar_group = createSVG('g', {\n            class: 'bar-group',\n            append_to: this.group\n        });\n        this.handle_group = createSVG('g', {\n            class: 'handle-group',\n            append_to: this.group\n        });\n    }\n\n    prepare_helpers() {\n        SVGElement.prototype.getX = function() {\n            return +this.getAttribute('x');\n        };\n        SVGElement.prototype.getY = function() {\n            return +this.getAttribute('y');\n        };\n        SVGElement.prototype.getWidth = function() {\n            return +this.getAttribute('width');\n        };\n        SVGElement.prototype.getHeight = function() {\n            return +this.getAttribute('height');\n        };\n        SVGElement.prototype.getEndX = function() {\n            return this.getX() + this.getWidth();\n        };\n    }\n\n    draw() {\n        this.draw_bar();\n        this.draw_progress_bar();\n        this.draw_label();\n        this.draw_resize_handles();\n    }\n\n    draw_bar() {\n        this.$bar = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar',\n            append_to: this.bar_group\n        });\n\n        animateSVG(this.$bar, 'width', 0, this.width);\n\n        if (this.invalid) {\n            this.$bar.classList.add('bar-invalid');\n        }\n    }\n\n    draw_progress_bar() {\n        if (this.invalid) return;\n        this.$bar_progress = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.progress_width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar-progress',\n            append_to: this.bar_group\n        });\n\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\n    }\n\n    draw_label() {\n        createSVG('text', {\n            x: this.x + this.width / 2,\n            y: this.y + this.height / 2,\n            innerHTML: this.task.name,\n            class: 'bar-label',\n            append_to: this.bar_group\n        });\n        // labels get BBox in the next tick\n        requestAnimationFrame(() => this.update_label_position());\n    }\n\n    draw_resize_handles() {\n        if (this.invalid) return;\n\n        const bar = this.$bar;\n        const handle_width = 8;\n\n        createSVG('rect', {\n            x: bar.getX() + bar.getWidth() - 9,\n            y: bar.getY() + 1,\n            width: handle_width,\n            height: this.height - 2,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'handle right',\n            append_to: this.handle_group\n        });\n\n        createSVG('rect', {\n            x: bar.getX() + 1,\n            y: bar.getY() + 1,\n            width: handle_width,\n            height: this.height - 2,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'handle left',\n            append_to: this.handle_group\n        });\n\n        if (this.task.progress && this.task.progress < 100) {\n            this.$handle_progress = createSVG('polygon', {\n                points: this.get_progress_polygon_points().join(','),\n                class: 'handle progress',\n                append_to: this.handle_group\n            });\n        }\n    }\n\n    get_progress_polygon_points() {\n        const bar_progress = this.$bar_progress;\n        return [\n            bar_progress.getEndX() - 5,\n            bar_progress.getY() + bar_progress.getHeight(),\n            bar_progress.getEndX() + 5,\n            bar_progress.getY() + bar_progress.getHeight(),\n            bar_progress.getEndX(),\n            bar_progress.getY() + bar_progress.getHeight() - 8.66\n        ];\n    }\n\n    bind() {\n        if (this.invalid) return;\n        this.setup_click_event();\n    }\n\n    setup_click_event() {\n        $.on(this.group, 'focus click', e => {\n            if (this.action_completed) {\n                // just finished a move action, wait for a few seconds\n                return;\n            }\n\n            if (e.type === 'click') {\n                this.gantt.trigger_event('click', [this.task]);\n            }\n\n            this.gantt.unselect_all();\n            this.group.classList.toggle('active');\n\n            this.show_popup();\n        });\n    }\n\n    show_popup() {\n        if (this.gantt.bar_being_dragged) return;\n\n        const start_date = date_utils.format(this.task._start, 'MMM D');\n        const end_date = date_utils.format(\n            date_utils.add(this.task._end, -1, 'second'),\n            'MMM D'\n        );\n        const subtitle = start_date + ' - ' + end_date;\n\n        this.gantt.show_popup({\n            target_element: this.$bar,\n            title: this.task.name,\n            subtitle: subtitle\n        });\n    }\n\n    update_bar_position({ x = null, width = null }) {\n        const bar = this.$bar;\n        if (x) {\n            // get all x values of parent task\n            const xs = this.task.dependencies.map(dep => {\n                return this.gantt.get_bar(dep).$bar.getX();\n            });\n            // child task must not go before parent\n            const valid_x = xs.reduce((prev, curr) => {\n                return x >= curr;\n            }, x);\n            if (!valid_x) {\n                width = null;\n                return;\n            }\n            this.update_attr(bar, 'x', x);\n        }\n        if (width && width >= this.gantt.options.column_width) {\n            this.update_attr(bar, 'width', width);\n        }\n        this.update_label_position();\n        this.update_handle_position();\n        this.update_progressbar_position();\n        this.update_arrow_position();\n    }\n\n    date_changed() {\n        let changed = false;\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n        if (Number(this.task._start) !== Number(new_start_date)) {\n            changed = true;\n            this.task._start = new_start_date;\n        }\n\n        if (Number(this.task._end) !== Number(new_end_date)) {\n            changed = true;\n            this.task._end = new_end_date;\n        }\n\n        if (!changed) return;\n\n        this.gantt.trigger_event('date_change', [\n            this.task,\n            new_start_date,\n            date_utils.add(new_end_date, -1, 'second')\n        ]);\n    }\n\n    progress_changed() {\n        const new_progress = this.compute_progress();\n        this.task.progress = new_progress;\n        this.gantt.trigger_event('progress_change', [this.task, new_progress]);\n    }\n\n    set_action_completed() {\n        this.action_completed = true;\n        setTimeout(() => (this.action_completed = false), 1000);\n    }\n\n    compute_start_end_date() {\n        const bar = this.$bar;\n        const x_in_units = bar.getX() / this.gantt.options.column_width;\n        const new_start_date = date_utils.add(\n            this.gantt.gantt_start,\n            x_in_units * this.gantt.options.step,\n            'hour'\n        );\n        const width_in_units = bar.getWidth() / this.gantt.options.column_width;\n        const new_end_date = date_utils.add(\n            new_start_date,\n            width_in_units * this.gantt.options.step,\n            'hour'\n        );\n\n        return { new_start_date, new_end_date };\n    }\n\n    compute_progress() {\n        const progress =\n            this.$bar_progress.getWidth() / this.$bar.getWidth() * 100;\n        return parseInt(progress, 10);\n    }\n\n    compute_x() {\n        const { step, column_width } = this.gantt.options;\n        const task_start = this.task._start;\n        const gantt_start = this.gantt.gantt_start;\n\n        const diff = date_utils.diff(task_start, gantt_start, 'hour');\n        let x = diff / step * column_width;\n\n        if (this.gantt.view_is('Month')) {\n            const diff = date_utils.diff(task_start, gantt_start, 'day');\n            x = diff * column_width / 30;\n        }\n        return x;\n    }\n\n    compute_y() {\n        return (\n            this.gantt.options.header_height +\n            this.gantt.options.padding +\n            this.task._index * (this.height + this.gantt.options.padding)\n        );\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.gantt.view_is('Week')) {\n            rem = dx % (this.gantt.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 14\n                    ? 0\n                    : this.gantt.options.column_width / 7);\n        } else if (this.gantt.view_is('Month')) {\n            rem = dx % (this.gantt.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 60\n                    ? 0\n                    : this.gantt.options.column_width / 30);\n        } else {\n            rem = dx % this.gantt.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 2\n                    ? 0\n                    : this.gantt.options.column_width);\n        }\n        return position;\n    }\n\n    update_attr(element, attr, value) {\n        value = +value;\n        if (!isNaN(value)) {\n            element.setAttribute(attr, value);\n        }\n        return element;\n    }\n\n    update_progressbar_position() {\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\n        this.$bar_progress.setAttribute(\n            'width',\n            this.$bar.getWidth() * (this.task.progress / 100)\n        );\n    }\n\n    update_label_position() {\n        const bar = this.$bar,\n            label = this.group.querySelector('.bar-label');\n\n        if (label.getBBox().width > bar.getWidth()) {\n            label.classList.add('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() + 5);\n        } else {\n            label.classList.remove('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\n        }\n    }\n\n    update_handle_position() {\n        const bar = this.$bar;\n        this.handle_group\n            .querySelector('.handle.left')\n            .setAttribute('x', bar.getX() + 1);\n        this.handle_group\n            .querySelector('.handle.right')\n            .setAttribute('x', bar.getEndX() - 9);\n        const handle = this.group.querySelector('.handle.progress');\n        handle &&\n            handle.setAttribute('points', this.get_progress_polygon_points());\n    }\n\n    update_arrow_position() {\n        this.arrows = this.arrows || [];\n        for (let arrow of this.arrows) {\n            arrow.update();\n        }\n    }\n}\n\nclass Arrow {\n    constructor(gantt, from_task, to_task) {\n        this.gantt = gantt;\n        this.from_task = from_task;\n        this.to_task = to_task;\n\n        this.calculate_path();\n        this.draw();\n    }\n\n    calculate_path() {\n        let start_x =\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\n\n        const condition = () =>\n            this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\n            start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\n\n        while (condition()) {\n            start_x -= 10;\n        }\n\n        const start_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.from_task.task._index +\n            this.gantt.options.padding;\n\n        const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\n        const end_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height / 2 +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.to_task.task._index +\n            this.gantt.options.padding;\n\n        const from_is_below_to =\n            this.from_task.task._index > this.to_task.task._index;\n        const curve = this.gantt.options.arrow_curve;\n        const clockwise = from_is_below_to ? 1 : 0;\n        const curve_y = from_is_below_to ? -curve : curve;\n        const offset = from_is_below_to\n            ? end_y + this.gantt.options.arrow_curve\n            : end_y - this.gantt.options.arrow_curve;\n\n        this.path = `\n            M ${start_x} ${start_y}\n            V ${offset}\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n            L ${end_x} ${end_y}\n            m -5 -5\n            l 5 5\n            l -5 5`;\n\n        if (\n            this.to_task.$bar.getX() <\n            this.from_task.$bar.getX() + this.gantt.options.padding\n        ) {\n            const down_1 = this.gantt.options.padding / 2 - curve;\n            const down_2 =\n                this.to_task.$bar.getY() +\n                this.to_task.$bar.getHeight() / 2 -\n                curve_y;\n            const left = this.to_task.$bar.getX() - this.gantt.options.padding;\n\n            this.path = `\n                M ${start_x} ${start_y}\n                v ${down_1}\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\n                H ${left}\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\n                V ${down_2}\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n                L ${end_x} ${end_y}\n                m -5 -5\n                l 5 5\n                l -5 5`;\n        }\n    }\n\n    draw() {\n        this.element = createSVG('path', {\n            d: this.path,\n            'data-from': this.from_task.task.id,\n            'data-to': this.to_task.task.id\n        });\n    }\n\n    update() {\n        this.calculate_path();\n        this.element.setAttribute('d', this.path);\n    }\n}\n\nclass Popup {\n    constructor(parent) {\n        this.parent = parent;\n        this.make();\n    }\n\n    make() {\n        this.parent.innerHTML = `\n            <div class=\"title\"></div>\n            <div class=\"subtitle\"></div>\n            <div class=\"pointer\"></div>\n        `;\n\n        this.hide();\n\n        this.title = this.parent.querySelector('.title');\n        this.subtitle = this.parent.querySelector('.subtitle');\n        this.pointer = this.parent.querySelector('.pointer');\n    }\n\n    show(options) {\n        if (!options.target_element) {\n            throw new Error('target_element is required to show popup');\n        }\n        if (!options.position) {\n            options.position = 'left';\n        }\n        const target_element = options.target_element;\n\n        // set data\n        this.title.innerHTML = options.title;\n        this.subtitle.innerHTML = options.subtitle;\n\n        this.parent.style.width = this.parent.clientWidth + 'px';\n\n        // set position\n        let position_meta;\n        if (target_element instanceof HTMLElement) {\n            position_meta = target_element.getBoundingClientRect();\n        } else if (target_element instanceof SVGElement) {\n            position_meta = options.target_element.getBBox();\n        }\n\n        if (options.position === 'left') {\n            this.parent.style.left =\n                position_meta.x + (position_meta.width + 10) + 'px';\n            this.parent.style.top =\n                position_meta.y -\n                this.title.clientHeight / 2 +\n                position_meta.height / 2 +\n                'px';\n\n            this.pointer.style.transform = 'rotateZ(90deg)';\n            this.pointer.style.left = '-7px';\n            this.pointer.style.top =\n                this.title.clientHeight / 2 -\n                this.pointer.getBoundingClientRect().height +\n                2 +\n                'px';\n        }\n\n        // show\n        this.parent.style.opacity = 1;\n    }\n\n    hide() {\n        this.parent.style.opacity = 0;\n    }\n}\n\nclass Gantt {\n    constructor(wrapper, tasks, options) {\n        this.setup_wrapper(wrapper);\n        this.setup_options(options);\n        this.setup_tasks(tasks);\n        // initialize with default view mode\n        this.change_view_mode();\n        this.bind_events();\n    }\n\n    setup_wrapper(element) {\n        if (typeof element === 'string') {\n            element = document.querySelector(element);\n        }\n\n        if (!(element instanceof HTMLElement)) {\n            throw new Error('Invalid argument passed for element');\n        }\n\n        // parent div element\n        this.$container = document.createElement('div');\n        this.$container.classList.add('gantt-container');\n        element.appendChild(this.$container);\n\n        // parent svg element\n        this.$svg = createSVG('svg', {\n            append_to: this.$container,\n            class: 'gantt'\n        });\n\n        // popup wrapper\n        this.popup_wrapper = document.createElement('div');\n        this.popup_wrapper.classList.add('popup-wrapper');\n        this.$svg.parentElement.appendChild(this.popup_wrapper);\n    }\n\n    setup_options(options) {\n        const default_options = {\n            header_height: 50,\n            column_width: 30,\n            step: 24,\n            view_modes: ['Quarter Day', 'Half Day', 'Day', 'Week', 'Month'],\n            bar_height: 20,\n            bar_corner_radius: 3,\n            arrow_curve: 5,\n            padding: 18,\n            view_mode: 'Day',\n            date_format: 'YYYY-MM-DD',\n            custom_popup_html: null\n        };\n        this.options = Object.assign({}, default_options, options);\n    }\n\n    setup_tasks(tasks) {\n        // prepare tasks\n        this.tasks = tasks.map((task, i) => {\n            // convert to Date objects\n            task._start = date_utils.parse(task.start);\n            task._end = date_utils.parse(task.end);\n\n            // make task invalid if duration too large\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\n                task.end = null;\n            }\n\n            // cache index\n            task._index = i;\n\n            // invalid dates\n            if (!task.start && !task.end) {\n                const today = date_utils.today();\n                task._start = today;\n                task._end = date_utils.add(today, 2, 'day');\n            }\n\n            if (!task.start && task.end) {\n                task._start = date_utils.add(task._end, -2, 'day');\n            }\n\n            if (task.start && !task.end) {\n                task._end = date_utils.add(task._start, 2, 'day');\n            }\n\n            // if hours is not set, assume the last day is full day\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n            const task_end_values = date_utils.get_date_values(task._end);\n            if (task_end_values.slice(3).every(d => d === 0)) {\n                task._end = date_utils.add(task._end, 24, 'hour');\n            }\n\n            // invalid flag\n            if (!task.start || !task.end) {\n                task.invalid = true;\n            }\n\n            // dependencies\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\n                let deps = [];\n                if (task.dependencies) {\n                    deps = task.dependencies\n                        .split(',')\n                        .map(d => d.trim())\n                        .filter(d => d);\n                }\n                task.dependencies = deps;\n            }\n\n            // uids\n            if (!task.id) {\n                task.id = generate_id(task);\n            }\n\n            return task;\n        });\n\n        this.setup_dependencies();\n    }\n\n    setup_dependencies() {\n        this.dependency_map = {};\n        for (let t of this.tasks) {\n            for (let d of t.dependencies) {\n                this.dependency_map[d] = this.dependency_map[d] || [];\n                this.dependency_map[d].push(t.id);\n            }\n        }\n    }\n\n    refresh(tasks) {\n        this.setup_tasks(tasks);\n        this.change_view_mode();\n    }\n\n    change_view_mode(mode = this.options.view_mode) {\n        this.update_view_scale(mode);\n        this.setup_dates();\n        this.render();\n        // fire viewmode_change event\n        this.trigger_event('view_change', [mode]);\n    }\n\n    update_view_scale(view_mode) {\n        this.options.view_mode = view_mode;\n\n        if (view_mode === 'Day') {\n            this.options.step = 24;\n            this.options.column_width = 38;\n        } else if (view_mode === 'Half Day') {\n            this.options.step = 24 / 2;\n            this.options.column_width = 38;\n        } else if (view_mode === 'Quarter Day') {\n            this.options.step = 24 / 4;\n            this.options.column_width = 38;\n        } else if (view_mode === 'Week') {\n            this.options.step = 24 * 7;\n            this.options.column_width = 140;\n        } else if (view_mode === 'Month') {\n            this.options.step = 24 * 30;\n            this.options.column_width = 120;\n        }\n    }\n\n    setup_dates() {\n        this.setup_gantt_dates();\n        this.setup_date_values();\n    }\n\n    setup_gantt_dates() {\n        this.gantt_start = this.gantt_end = null;\n\n        for (let task of this.tasks) {\n            // set global start and end date\n            if (!this.gantt_start || task._start < this.gantt_start) {\n                this.gantt_start = task._start;\n            }\n            if (!this.gantt_end || task._end > this.gantt_end) {\n                this.gantt_end = task._end;\n            }\n        }\n\n        this.gantt_start = date_utils.start_of(this.gantt_start, 'day');\n        this.gantt_end = date_utils.start_of(this.gantt_end, 'day');\n\n        // add date padding on both sides\n        if (this.view_is(['Quarter Day', 'Half Day'])) {\n            this.gantt_start = date_utils.add(this.gantt_start, -7, 'day');\n            this.gantt_end = date_utils.add(this.gantt_end, 7, 'day');\n        } else if (this.view_is('Month')) {\n            this.gantt_start = date_utils.start_of(this.gantt_start, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'year');\n        } else {\n            this.gantt_start = date_utils.add(this.gantt_start, -1, 'month');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'month');\n        }\n    }\n\n    setup_date_values() {\n        this.dates = [];\n        let cur_date = null;\n\n        while (cur_date === null || cur_date < this.gantt_end) {\n            if (!cur_date) {\n                cur_date = date_utils.clone(this.gantt_start);\n            } else {\n                cur_date = this.view_is('Month')\n                    ? date_utils.add(cur_date, 1, 'month')\n                    : date_utils.add(cur_date, this.options.step, 'hour');\n            }\n            this.dates.push(cur_date);\n        }\n    }\n\n    bind_events() {\n        this.bind_grid_click();\n        this.bind_bar_events();\n    }\n\n    render() {\n        this.clear();\n        this.setup_layers();\n        this.make_grid();\n        this.make_dates();\n        this.make_bars();\n        this.make_arrows();\n        this.map_arrows_on_bars();\n        this.set_width();\n        this.set_scroll_position();\n    }\n\n    setup_layers() {\n        this.layers = {};\n        const layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details'];\n        // make group layers\n        for (let layer of layers) {\n            this.layers[layer] = createSVG('g', {\n                class: layer,\n                append_to: this.$svg\n            });\n        }\n    }\n\n    make_grid() {\n        this.make_grid_background();\n        this.make_grid_rows();\n        this.make_grid_header();\n        this.make_grid_ticks();\n        this.make_grid_highlights();\n    }\n\n    make_grid_background() {\n        const grid_width = this.dates.length * this.options.column_width;\n        const grid_height =\n            this.options.header_height +\n            this.options.padding +\n            (this.options.bar_height + this.options.padding) *\n                this.tasks.length;\n\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: grid_width,\n            height: grid_height,\n            class: 'grid-background',\n            append_to: this.layers.grid\n        });\n\n        $.attr(this.$svg, {\n            height: grid_height + this.options.padding + 100,\n            width: '100%'\n        });\n    }\n\n    make_grid_rows() {\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\n        const lines_layer = createSVG('g', { append_to: this.layers.grid });\n\n        const row_width = this.dates.length * this.options.column_width;\n        const row_height = this.options.bar_height + this.options.padding;\n\n        let row_y = this.options.header_height + this.options.padding / 2;\n\n        for (let task of this.tasks) {\n            createSVG('rect', {\n                x: 0,\n                y: row_y,\n                width: row_width,\n                height: row_height,\n                class: 'grid-row',\n                append_to: rows_layer\n            });\n\n            createSVG('line', {\n                x1: 0,\n                y1: row_y + row_height,\n                x2: row_width,\n                y2: row_y + row_height,\n                class: 'row-line',\n                append_to: lines_layer\n            });\n\n            row_y += this.options.bar_height + this.options.padding;\n        }\n    }\n\n    make_grid_header() {\n        const header_width = this.dates.length * this.options.column_width;\n        const header_height = this.options.header_height + 10;\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: header_width,\n            height: header_height,\n            class: 'grid-header',\n            append_to: this.layers.grid\n        });\n    }\n\n    make_grid_ticks() {\n        let tick_x = 0;\n        let tick_y = this.options.header_height + this.options.padding / 2;\n        let tick_height =\n            (this.options.bar_height + this.options.padding) *\n            this.tasks.length;\n\n        for (let date of this.dates) {\n            let tick_class = 'tick';\n            // thick tick for monday\n            if (this.view_is('Day') && date.getDate() === 1) {\n                tick_class += ' thick';\n            }\n            // thick tick for first week\n            if (\n                this.view_is('Week') &&\n                date.getDate() >= 1 &&\n                date.getDate() < 8\n            ) {\n                tick_class += ' thick';\n            }\n            // thick ticks for quarters\n            if (this.view_is('Month') && (date.getMonth() + 1) % 3 === 0) {\n                tick_class += ' thick';\n            }\n\n            createSVG('path', {\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n                class: tick_class,\n                append_to: this.layers.grid\n            });\n\n            if (this.view_is('Month')) {\n                tick_x +=\n                    date_utils.get_days_in_month(date) *\n                    this.options.column_width /\n                    30;\n            } else {\n                tick_x += this.options.column_width;\n            }\n        }\n    }\n\n    make_grid_highlights() {\n        // highlight today's date\n        if (this.view_is('Day')) {\n            const x =\n                date_utils.diff(date_utils.today(), this.gantt_start, 'hour') /\n                this.options.step *\n                this.options.column_width;\n            const y = 0;\n\n            const width = this.options.column_width;\n            const height =\n                (this.options.bar_height + this.options.padding) *\n                    this.tasks.length +\n                this.options.header_height +\n                this.options.padding / 2;\n\n            createSVG('rect', {\n                x,\n                y,\n                width,\n                height,\n                class: 'today-highlight',\n                append_to: this.layers.grid\n            });\n        }\n    }\n\n    make_dates() {\n        for (let date of this.get_dates_to_draw()) {\n            createSVG('text', {\n                x: date.lower_x,\n                y: date.lower_y,\n                innerHTML: date.lower_text,\n                class: 'lower-text',\n                append_to: this.layers.date\n            });\n\n            if (date.upper_text) {\n                const $upper_text = createSVG('text', {\n                    x: date.upper_x,\n                    y: date.upper_y,\n                    innerHTML: date.upper_text,\n                    class: 'upper-text',\n                    append_to: this.layers.date\n                });\n\n                // remove out-of-bound dates\n                if (\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\n                ) {\n                    $upper_text.remove();\n                }\n            }\n        }\n    }\n\n    get_dates_to_draw() {\n        let last_date = null;\n        const dates = this.dates.map((date, i) => {\n            const d = this.get_date_info(date, last_date, i);\n            last_date = date;\n            return d;\n        });\n        return dates;\n    }\n\n    get_date_info(date, last_date, i) {\n        if (!last_date) {\n            last_date = date_utils.add(date, 1, 'year');\n        }\n        const date_text = {\n            'Quarter Day_lower': date_utils.format(date, 'HH'),\n            'Half Day_lower': date_utils.format(date, 'HH'),\n            Day_lower:\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D')\n                    : '',\n            Week_lower:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'D MMM')\n                    : date_utils.format(date, 'D'),\n            Month_lower: date_utils.format(date, 'MMMM'),\n            'Quarter Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D MMM')\n                    : '',\n            'Half Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date.getMonth() !== last_date.getMonth()\n                      ? date_utils.format(date, 'D MMM')\n                      : date_utils.format(date, 'D')\n                    : '',\n            Day_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM')\n                    : '',\n            Week_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM')\n                    : '',\n            Month_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY')\n                    : ''\n        };\n\n        const base_pos = {\n            x: i * this.options.column_width,\n            lower_y: this.options.header_height,\n            upper_y: this.options.header_height - 25\n        };\n\n        const x_pos = {\n            'Quarter Day_lower': this.options.column_width * 4 / 2,\n            'Quarter Day_upper': 0,\n            'Half Day_lower': this.options.column_width * 2 / 2,\n            'Half Day_upper': 0,\n            Day_lower: this.options.column_width / 2,\n            Day_upper: this.options.column_width * 30 / 2,\n            Week_lower: 0,\n            Week_upper: this.options.column_width * 4 / 2,\n            Month_lower: this.options.column_width / 2,\n            Month_upper: this.options.column_width * 12 / 2\n        };\n\n        return {\n            upper_text: date_text[`${this.options.view_mode}_upper`],\n            lower_text: date_text[`${this.options.view_mode}_lower`],\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n            upper_y: base_pos.upper_y,\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n            lower_y: base_pos.lower_y\n        };\n    }\n\n    make_bars() {\n        this.bars = this.tasks.map(task => {\n            const bar = new Bar(this, task);\n            this.layers.bar.appendChild(bar.group);\n            return bar;\n        });\n    }\n\n    make_arrows() {\n        this.arrows = [];\n        for (let task of this.tasks) {\n            let arrows = [];\n            arrows = task.dependencies\n                .map(task_id => {\n                    const dependency = this.get_task(task_id);\n                    if (!dependency) return;\n                    const arrow = new Arrow(\n                        this,\n                        this.bars[dependency._index], // from_task\n                        this.bars[task._index] // to_task\n                    );\n                    this.layers.arrow.appendChild(arrow.element);\n                    return arrow;\n                })\n                .filter(Boolean); // filter falsy values\n            this.arrows = this.arrows.concat(arrows);\n        }\n    }\n\n    map_arrows_on_bars() {\n        for (let bar of this.bars) {\n            bar.arrows = this.arrows.filter(arrow => {\n                return (\n                    arrow.from_task.task.id === bar.task.id ||\n                    arrow.to_task.task.id === bar.task.id\n                );\n            });\n        }\n    }\n\n    set_width() {\n        const cur_width = this.$svg.getBoundingClientRect().width;\n        const actual_width = this.$svg\n            .querySelector('.grid .grid-row')\n            .getAttribute('width');\n        if (cur_width < actual_width) {\n            this.$svg.setAttribute('width', actual_width);\n        }\n    }\n\n    set_scroll_position() {\n        const parent_element = this.$svg.parentElement;\n        if (!parent_element) return;\n\n        const hours_before_first_task = date_utils.diff(\n            this.get_oldest_starting_date(),\n            this.gantt_start,\n            'hour'\n        );\n\n        const scroll_pos =\n            hours_before_first_task /\n                this.options.step *\n                this.options.column_width -\n            this.options.column_width;\n\n        parent_element.scrollLeft = scroll_pos;\n    }\n\n    bind_grid_click() {\n        $.on(this.$svg, 'click', '.grid-row, .grid-header', () => {\n            this.unselect_all();\n            this.hide_popup();\n        });\n    }\n\n    bind_bar_events() {\n        let is_dragging = false;\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing_left = false;\n        let is_resizing_right = false;\n        let parent_bar_id = null;\n        let bars = []; // instanceof Bar\n        this.bar_being_dragged = null;\n\n        function action_in_progress() {\n            return is_dragging || is_resizing_left || is_resizing_right;\n        }\n\n        $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\n            const bar_wrapper = $.closest('.bar-wrapper', element);\n\n            if (element.classList.contains('left')) {\n                is_resizing_left = true;\n            } else if (element.classList.contains('right')) {\n                is_resizing_right = true;\n            } else if (element.classList.contains('bar-wrapper')) {\n                is_dragging = true;\n            }\n\n            bar_wrapper.classList.add('active');\n\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\n            const ids = [\n                parent_bar_id,\n                ...this.get_all_dependent_tasks(parent_bar_id)\n            ];\n            bars = ids.map(id => this.get_bar(id));\n\n            this.bar_being_dragged = parent_bar_id;\n\n            bars.forEach(bar => {\n                const $bar = bar.$bar;\n                $bar.ox = $bar.getX();\n                $bar.oy = $bar.getY();\n                $bar.owidth = $bar.getWidth();\n                $bar.finaldx = 0;\n            });\n        });\n\n        $.on(this.$svg, 'mousemove', e => {\n            if (!action_in_progress()) return;\n            const dx = e.offsetX - x_on_start;\n            const dy = e.offsetY - y_on_start;\n\n            bars.forEach(bar => {\n                const $bar = bar.$bar;\n                $bar.finaldx = this.get_snap_position(dx);\n\n                if (is_resizing_left) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx,\n                            width: $bar.owidth - $bar.finaldx\n                        });\n                    } else {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx\n                        });\n                    }\n                } else if (is_resizing_right) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            width: $bar.owidth + $bar.finaldx\n                        });\n                    }\n                } else if (is_dragging) {\n                    bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n                }\n            });\n        });\n\n        document.addEventListener('mouseup', e => {\n            if (is_dragging || is_resizing_left || is_resizing_right) {\n                bars.forEach(bar => bar.group.classList.remove('active'));\n            }\n\n            is_dragging = false;\n            is_resizing_left = false;\n            is_resizing_right = false;\n        });\n\n        $.on(this.$svg, 'mouseup', e => {\n            this.bar_being_dragged = null;\n            bars.forEach(bar => {\n                const $bar = bar.$bar;\n                if (!$bar.finaldx) return;\n                bar.date_changed();\n                bar.set_action_completed();\n            });\n        });\n\n        this.bind_bar_progress();\n    }\n\n    bind_bar_progress() {\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing = null;\n        let bar = null;\n        let $bar_progress = null;\n        let $bar = null;\n\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\n            is_resizing = true;\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\n            const id = $bar_wrapper.getAttribute('data-id');\n            bar = this.get_bar(id);\n\n            $bar_progress = bar.$bar_progress;\n            $bar = bar.$bar;\n\n            $bar_progress.finaldx = 0;\n            $bar_progress.owidth = $bar_progress.getWidth();\n            $bar_progress.min_dx = -$bar_progress.getWidth();\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n        });\n\n        $.on(this.$svg, 'mousemove', e => {\n            if (!is_resizing) return;\n            let dx = e.offsetX - x_on_start;\n            let dy = e.offsetY - y_on_start;\n\n            if (dx > $bar_progress.max_dx) {\n                dx = $bar_progress.max_dx;\n            }\n            if (dx < $bar_progress.min_dx) {\n                dx = $bar_progress.min_dx;\n            }\n\n            const $handle = bar.$handle_progress;\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\n            $bar_progress.finaldx = dx;\n        });\n\n        $.on(this.$svg, 'mouseup', () => {\n            is_resizing = false;\n            if (!($bar_progress && $bar_progress.finaldx)) return;\n            bar.progress_changed();\n            bar.set_action_completed();\n        });\n    }\n\n    get_all_dependent_tasks(task_id) {\n        let out = [];\n        let to_process = [task_id];\n        while (to_process.length) {\n            const deps = to_process.reduce((acc, curr) => {\n                acc = acc.concat(this.dependency_map[curr]);\n                return acc;\n            }, []);\n\n            out = out.concat(deps);\n            to_process = deps.filter(d => !to_process.includes(d));\n        }\n\n        return out.filter(Boolean);\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.view_is('Week')) {\n            rem = dx % (this.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 14\n                    ? 0\n                    : this.options.column_width / 7);\n        } else if (this.view_is('Month')) {\n            rem = dx % (this.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 60\n                    ? 0\n                    : this.options.column_width / 30);\n        } else {\n            rem = dx % this.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 2\n                    ? 0\n                    : this.options.column_width);\n        }\n        return position;\n    }\n\n    unselect_all() {\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach(el => {\n            el.classList.remove('active');\n        });\n    }\n\n    view_is(modes) {\n        if (typeof modes === 'string') {\n            return this.options.view_mode === modes;\n        }\n\n        if (Array.isArray(modes)) {\n            return modes.some(mode => this.options.view_mode === mode);\n        }\n\n        return false;\n    }\n\n    get_task(id) {\n        return this.tasks.find(task => {\n            return task.id === id;\n        });\n    }\n\n    get_bar(id) {\n        return this.bars.find(bar => {\n            return bar.task.id === id;\n        });\n    }\n\n    show_popup(options) {\n        if (!this.popup) {\n            this.popup = new Popup(this.popup_wrapper);\n        }\n        this.popup.show(options);\n    }\n\n    hide_popup() {\n        this.popup && this.popup.hide();\n    }\n\n    trigger_event(event, args) {\n        if (this.options['on_' + event]) {\n            this.options['on_' + event].apply(null, args);\n        }\n    }\n\n    /**\n     * Gets the oldest starting date from the list of tasks\n     *\n     * @returns Date\n     * @memberof Gantt\n     */\n    get_oldest_starting_date() {\n        return this.tasks\n            .map(task => task._start)\n            .reduce(\n                (prev_date, cur_date) =>\n                    cur_date <= prev_date ? cur_date : prev_date\n            );\n    }\n\n    /**\n     * Clear all elements from the parent svg element\n     *\n     * @memberof Gantt\n     */\n    clear() {\n        this.$svg.innerHTML = '';\n    }\n}\n\nfunction generate_id(task) {\n    return (\n        task.name +\n        '_' +\n        Math.random()\n            .toString(36)\n            .slice(2, 12)\n    );\n}\n\nreturn Gantt;\n\n}());\n"]}